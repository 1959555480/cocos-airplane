{"version":3,"sources":["file:///D:/yyx/cocos-airplane/assets/script/ui/uiMain.ts"],"names":["_decorator","Component","Node","input","Input","GameManager","ccclass","property","UIMain","start","on","EventType","TOUCH_START","_touchStart","TOUCH_MOVE","_touchMove","TOUCH_END","_touchEnd","event","console","log","gameManage","isShooting","delta","getDelta","pos","player","position","setPosition","x","planeSpeed","y","z","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAmBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,K,OAAAA,K;;AACjDC,MAAAA,W,iBAAAA,W;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;wBAGjBQ,M,WADZF,OAAO,CAAC,QAAD,C,UAMHC,QAAQ,CAACL,IAAD,C,UAGRK,QAAQ;AAAA;AAAA,qC,2BATb,MACaC,MADb,SAC4BP,SAD5B,CACsC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAWlCQ,QAAAA,KAAK,GAAG;AACNN,UAAAA,KAAK,CAACO,EAAN,CAASN,KAAK,CAACO,SAAN,CAAgBC,WAAzB,EAAqC,KAAKC,WAA1C,EAAsD,IAAtD;AACAV,UAAAA,KAAK,CAACO,EAAN,CAASN,KAAK,CAACO,SAAN,CAAgBG,UAAzB,EAAoC,KAAKC,UAAzC,EAAoD,IAApD;AACAZ,UAAAA,KAAK,CAACO,EAAN,CAASN,KAAK,CAACO,SAAN,CAAgBK,SAAzB,EAAmC,KAAKC,SAAxC,EAAkD,IAAlD;AACD;;AACDJ,QAAAA,WAAW,CAACK,KAAD,EAAkB;AAC3BC,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyB,KAAKC,UAA9B;AACA,eAAKA,UAAL,CAAgBC,UAAhB,CAA2B,IAA3B;AACD;;AACDP,QAAAA,UAAU,CAACG,KAAD,EAAkB;AAC1B,gBAAMK,KAAK,GAAGL,KAAK,CAACM,QAAN,EAAd;AACA,cAAIC,GAAG,GAAG,KAAKC,MAAL,CAAYC,QAAtB;AACA,eAAKD,MAAL,CAAYE,WAAZ,CAAwBH,GAAG,CAACI,CAAJ,GAAQ,OAAO,KAAKC,UAAZ,GAAyBP,KAAK,CAACM,CAA/D,EAAkEJ,GAAG,CAACM,CAAtE,EAAyEN,GAAG,CAACO,CAAJ,GAAQ,OAAO,KAAKF,UAAZ,GAAyBP,KAAK,CAACQ,CAAhH;AACD;;AACDd,QAAAA,SAAS,CAACC,KAAD,EAAkB;AACzB,gBAAMK,KAAK,GAAGL,KAAK,CAACM,QAAN,EAAd;AACA,cAAIC,GAAG,GAAG,KAAKC,MAAL,CAAYC,QAAtB;AACA,eAAKD,MAAL,CAAYE,WAAZ,CAAwBH,GAAG,CAACI,CAAJ,GAAQ,OAAO,KAAKC,UAAZ,GAAyBP,KAAK,CAACM,CAA/D,EAAkEJ,GAAG,CAACM,CAAtE,EAAyEN,GAAG,CAACO,CAAJ,GAAQ,OAAO,KAAKF,UAAZ,GAAyBP,KAAK,CAACQ,CAAhH;AACD;;AACDE,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAhCiC,O,6EAEjC3B,Q;;;;;iBACmB,C;;;;;;;iBAGC,I;;;;;;;iBAGY,I","sourcesContent":["import { _decorator, Component, Node, SystemEvent, input, Input, EventTouch } from 'cc';\nimport { GameManager } from '../framework/GameManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('UIMain')\nexport class UIMain extends Component {\n\n    @property\n    public planeSpeed = 3;\n\n    @property(Node)\n    public player:Node = null\n\n    @property(GameManager)\n    public gameManage: GameManager = null\n\n    start() {\n      input.on(Input.EventType.TOUCH_START,this._touchStart,this)\n      input.on(Input.EventType.TOUCH_MOVE,this._touchMove,this)\n      input.on(Input.EventType.TOUCH_END,this._touchEnd,this)\n    }\n    _touchStart(event:EventTouch){\n      console.log(\"isShooting\",this.gameManage)\n      this.gameManage.isShooting(true)\n    }\n    _touchMove(event:EventTouch){\n      const delta = event.getDelta()\n      let pos = this.player.position;\n      this.player.setPosition(pos.x + 0.01 * this.planeSpeed * delta.x, pos.y, pos.z - 0.01 * this.planeSpeed * delta.y);\n    }\n    _touchEnd(event:EventTouch){\n      const delta = event.getDelta()\n      let pos = this.player.position;\n      this.player.setPosition(pos.x + 0.01 * this.planeSpeed * delta.x, pos.y, pos.z - 0.01 * this.planeSpeed * delta.y);\n    }\n    update(deltaTime: number) {\n        \n    }\n}\n\n"]}